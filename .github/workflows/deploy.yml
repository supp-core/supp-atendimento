name: CI/CD para AKS com Azure Container Registry

on:
  push:
    branches:
      - master
      - desenvolvimento

env:
  REGISTRY: suppregistry.azurecr.io
  BACKEND_IMAGE_NAME: helpdesk/supp-backend-kubernetes
  WEBSERVER_IMAGE_NAME: helpdesk/supp-webserver-kubernetes

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Definir variáveis de ambiente
        run: echo "IMAGE_TAG=$(echo ${GITHUB_SHA} | cut -c1-7)" >> $GITHUB_ENV

      - name: Login no Azure Container Registry
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ env.REGISTRY }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build e Push da imagem Backend
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ env.IMAGE_TAG }} -f ./docker/php/Dockerfile .
          docker push ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Build e Push da imagem Webserver
        run: |
          docker build -t ${{ env.REGISTRY }}/${{ env.WEBSERVER_IMAGE_NAME }}:${{ env.IMAGE_TAG }} -f ./docker/nginx/Dockerfile .
          docker push ${{ env.REGISTRY }}/${{ env.WEBSERVER_IMAGE_NAME }}:${{ env.IMAGE_TAG }}

      - name: Configurar acesso ao Kubernetes
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

      - name: Atualizar deployments no AKS
        run: |
          kubectl set image deployment/supp-backend-kubernetes supp-backend-kubernetes=${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ env.IMAGE_TAG }} --namespace=helpdesk
          kubectl set image deployment/supp-webserver-kubernetes supp-webserver-kubernetes=${{ env.REGISTRY }}/${{ env.WEBSERVER_IMAGE_NAME }}:${{ env.IMAGE_TAG }} --namespace=helpdesk
