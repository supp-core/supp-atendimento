# name: CI/CD para AKS com Azure Container Registry

# on:
#   push:
#     branches:
#       - master
#       - desenvolvimento

# env:
#   REGISTRY: suppregistry.azurecr.io
#   BACKEND_IMAGE_NAME: helpdesk/supp-backend-kubernetes
#   WEBSERVER_IMAGE_NAME: helpdesk/supp-webserver-kubernetes
#   IMAGE_TAG: v1.0.${{ github.run_number }}  # Tag incremental com prefixo w

# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     environment: ${{ github.ref == 'refs/heads/master' && 'producao' || 'desenvolvimento' }}

#     steps:
#       - name: Checkout do repositório
#         uses: actions/checkout@v3

#       - name: Login no Azure Container Registry
#         uses: docker/login-action@v3
#         with:
#           registry: ${{ env.REGISTRY }}
#           username: ${{ secrets.ACR_USERNAME }}
#           password: ${{ secrets.ACR_PASSWORD }}

#       - name: Build e push da imagem Backend
#         uses: docker/build-push-action@v6
#         with:
#           context: .
#           file: ./docker/php/Dockerfile
#           push: true
#           tags: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ env.IMAGE_TAG }}

#       - name: Build e push da imagem Webserver
#         uses: docker/build-push-action@v6
#         with:
#           context: .
#           file: ./docker/nginx/Dockerfile
#           push: true
#           tags: ${{ env.REGISTRY }}/${{ env.WEBSERVER_IMAGE_NAME }}:${{ env.IMAGE_TAG }}

#       - name: Configurar acesso ao Kubernetes
#         run: |
#           mkdir -p ~/.kube
#           echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

#       - name: Substituir IMAGE_TAG nos arquivos YAML
#         run: |
#           find kubernetes/ -type f -name "*.yaml" -exec sed -i "s|IMAGE_TAG|${{ env.IMAGE_TAG }}|g" {} +

#       - name: Aplicar deployments no AKS
#         run: |
#           kubectl apply -f kubernetes/backend-deployment.yaml -n helpdesk
#           kubectl apply -f kubernetes/backend-service.yaml -n helpdesk
#           kubectl apply -f kubernetes/webserver-deployment.yaml -n helpdesk
#           kubectl apply -f kubernetes/webserver-service.yaml -n helpdesk
#           kubectl apply -f kubernetes/ingress.yaml -n helpdesk

#######   Deploy alterado para armazenar Cache no GITHUB TESTE1  #######
name: CI/CD para AKS com Azure Container Registry

on:
  push:
    branches:
      - master
      - desenvolvimento

env:
  REGISTRY: suppregistry.azurecr.io
  BACKEND_IMAGE_NAME: helpdesk/supp-backend-kubernetes
  WEBSERVER_IMAGE_NAME: helpdesk/supp-webserver-kubernetes
  IMAGE_TAG: v1.0.${{ github.run_number }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/master' && 'producao' || 'desenvolvimento' }}

    steps:
      - name: Checkout do repositório
        uses: actions/checkout@v3

      - name: Configurar QEMU
        uses: docker/setup-qemu-action@v3

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache das camadas do Docker
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Login no Azure Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build e push da imagem Backend
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/php/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.BACKEND_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Build e push da imagem Webserver
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./docker/nginx/Dockerfile
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.WEBSERVER_IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Atualizar cache do Docker
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Configurar acesso ao Kubernetes
        run: |
          mkdir -p ~/.kube
          echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config

      - name: Substituir IMAGE_TAG nos arquivos YAML
        run: |
          find kubernetes/ -type f -name "*.yaml" -exec sed -i "s|IMAGE_TAG|${{ env.IMAGE_TAG }}|g" {} +

      - name: Aplicar deployments no AKS
        run: |
          kubectl apply -f kubernetes/backend-deployment.yaml -n helpdesk
          kubectl apply -f kubernetes/backend-service.yaml -n helpdesk
          kubectl apply -f kubernetes/webserver-deployment.yaml -n helpdesk
          kubectl apply -f kubernetes/webserver-service.yaml -n helpdesk
          kubectl apply -f kubernetes/ingress.yaml -n helpdesk

